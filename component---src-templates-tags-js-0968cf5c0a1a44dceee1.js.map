{"version":3,"file":"component---src-templates-tags-js-0968cf5c0a1a44dceee1.js","mappings":"wNAEaA,EAAWC,EAAAA,EAAAA,GAAH,mVAqBRC,EAAWD,EAAAA,EAAAA,GAAH,gR,sFCjBRE,GAAiBF,EAAAA,EAAAA,GAAOG,EAAAA,KAAPH,CAAH,2dACvBI,EAAAA,IAsCJ,IAbiB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACzB,OACE,gBAAC,WAAD,KACGD,GAASC,GACR,gBAACJ,EAAD,CAAgBK,GAAID,GAAc,KAC/BD,EACD,gBAAC,IAAD,CAAMG,KAAK,oB,uIC3BfC,EAA0BT,EAAAA,EAAAA,IAAH,oEACzBI,EAAAA,IAIEM,GAAeV,EAAAA,EAAAA,GAAOD,EAAAA,EAAPC,CAAH,6CAwDlB,UApDa,SAAC,GAA2B,IAAzBW,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAS,mBAAsBD,EAAtB,SAAuD,IAAfA,EAAmB,GAAK,KAE/E,OACE,gBAAC,IAAD,CAAQE,UAAWC,EAAAA,GACjB,gBAAC,IAAD,KACE,gBAACT,EAAD,KAAeG,GACf,gBAACJ,EAAD,KACE,gBAAC,IAAD,CAAUJ,MAAM,gBAAgBC,KAAK,WAEvC,gBAAC,IAAD,KAAWW,GACX,0BACGF,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,sBAAIE,IAAKJ,GACP,gBAAC,EAAAnB,KAAD,CAAMI,GAAE,QAAUe,GAASE","sources":["webpack://gatsby-starter-level-2/./src/components/_shared/styled-headings.js","webpack://gatsby-starter-level-2/./src/components/links/text-link.js","webpack://gatsby-starter-level-2/./src/templates/tags.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  margin: 20px 0;\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport Icon from '../icon';\nimport { flexCenter } from './../_shared/styled-mixins';\n\nexport const StyledTextLink = styled(Link)`\n  ${flexCenter};\n  text-decoration: none;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n  padding: 0.4rem 0.8rem;\n  color: var(--primary-color);\n\n  &:hover {\n    color: var(--secondary-color);\n    text-decoration: underline;\n  }\n\n  & > svg {\n    height: 0.8rem;\n    fill: currentColor;\n    margin-left: 0.25rem;\n    transition: margin-left var(--transition-fast) ease;\n  }\n\n  &:hover > svg {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst TextLink = ({ label, link }) => {\n  return (\n    <React.Fragment>\n      {label && link && (\n        <StyledTextLink to={link ? link : '#'}>\n          {label}\n          <Icon icon=\"arrow-right\" />\n        </StyledTextLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TextLink;\n","import styled from '@emotion/styled';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport TextLink from '../components/links/text-link';\nimport { blogMenuLinks } from '../components/_config/menu-links';\nimport { StyledH1, StyledH2 } from '../components/_shared/styled-headings';\nimport { flexCenter } from '../components/_shared/styled-mixins';\nimport { StyledFullHeightSection } from '../components/_shared/styled-section';\n\nconst StyledTagsLinkContainer = styled.div`\n  ${flexCenter};\n  width: 100%;\n  margin: 2.5rem 0;\n`;\nconst StyledTagsH1 = styled(StyledH1)`\n  margin-top: 3rem;\n`;\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `A collection of ${totalCount} post${totalCount === 1 ? '' : 's'}`;\n\n  return (\n    <Layout menuLinks={blogMenuLinks}>\n      <StyledFullHeightSection>\n        <StyledTagsH1>{tag}</StyledTagsH1>\n        <StyledTagsLinkContainer>\n          <TextLink label=\"View All Tags\" link=\"/tags\" />\n        </StyledTagsLinkContainer>\n        <StyledH2>{tagHeader}</StyledH2>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            const { title } = node.frontmatter;\n            return (\n              <li key={slug}>\n                <Link to={`/blog${slug}`}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </StyledFullHeightSection>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { regex: \"/content/posts/\" }\n        frontmatter: { published: { eq: true }, tags: { in: [$tag] } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledH1","styled","StyledH2","StyledTextLink","Link","flexCenter","label","link","to","icon","StyledTagsLinkContainer","StyledTagsH1","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","menuLinks","blogMenuLinks","map","node","slug","fields","title","frontmatter","key"],"sourceRoot":""}